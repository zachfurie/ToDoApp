{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction setButtoner() {\n  alert('pressed');\n  buttoner += 1;\n}\n\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttoner = _useState2[0],\n      setButtoner = _useState2[1];\n\n  if (buttoner % 2 == 1) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.instructions,\n        children: \"Pressed!\"\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setButtoner;\n        },\n        style: styles.button_one,\n        children: _jsx(Text, {\n          style: styles.button_text,\n          children: \"Press Me!\"\n        })\n      })]\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.instructions,\n      children: \"Press the button!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(TouchableOpacity, {\n      onPress: setButtoner,\n      style: styles.button_one,\n      children: _jsx(Text, {\n        style: styles.button_text,\n        children: \"Press Me!\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    marginHorizontal: 15,\n    marginBottom: 10\n  },\n  button_one: {\n    backgroundColor: '#bd1',\n    padding: 20,\n    borderRadius: 5\n  },\n  button_text: {\n    fontSize: 20,\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","setButtoner","alert","buttoner","App","styles","container","instructions","button_one","button_text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize","marginHorizontal","marginBottom","padding","borderRadius"],"sources":["/Users/zachfurie/go/src/ToDoApp/my-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nfunction setButtoner() {\n  alert('pressed')\n  buttoner += 1\n}\n\n\nexport default function App() {\n  const [buttoner, setButtoner] = useState(0)\n\n  \n\n  if (buttoner%2 == 1) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.instructions}>Pressed!</Text>\n        <StatusBar style=\"auto\" />\n      \n        <TouchableOpacity onPress={() => setButtoner} style={styles.button_one}>\n          <Text style={styles.button_text}>Press Me!</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  } \n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.instructions}>Press the button!</Text>\n      <StatusBar style=\"auto\" />\n    \n      <TouchableOpacity onPress={setButtoner} style={styles.button_one}>\n        <Text style={styles.button_text}>Press Me!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    marginHorizontal: 15,\n    marginBottom: 10,\n  },\n  button_one: {\n    backgroundColor: '#bd1',\n    padding: 20,\n    borderRadius: 5,\n  },\n  button_text: {\n    fontSize: 20,\n    color: '#fff',\n  }\n});\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;;;;;AAGA,SAASC,WAAT,GAAuB;EACrBC,KAAK,CAAC,SAAD,CAAL;EACAC,QAAQ,IAAI,CAAZ;AACD;;AAGD,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAgCJ,QAAQ,CAAC,CAAD,CAAxC;EAAA;EAAA,IAAOG,QAAP;EAAA,IAAiBF,WAAjB;;EAIA,IAAIE,QAAQ,GAAC,CAAT,IAAc,CAAlB,EAAqB;IACnB,OACE,MAAC,IAAD;MAAM,KAAK,EAAEE,MAAM,CAACC,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,YAApB;QAAA;MAAA,EADF,EAEE,KAAC,SAAD;QAAW,KAAK,EAAC;MAAjB,EAFF,EAIE,KAAC,gBAAD;QAAkB,OAAO,EAAE;UAAA,OAAMN,WAAN;QAAA,CAA3B;QAA8C,KAAK,EAAEI,MAAM,CAACG,UAA5D;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEH,MAAM,CAACI,WAApB;UAAA;QAAA;MADF,EAJF;IAAA,EADF;EAUD;;EAED,OACE,MAAC,IAAD;IAAM,KAAK,EAAEJ,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,YAApB;MAAA;IAAA,EADF,EAEE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EAFF,EAIE,KAAC,gBAAD;MAAkB,OAAO,EAAEN,WAA3B;MAAwC,KAAK,EAAEI,MAAM,CAACG,UAAtD;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,WAApB;QAAA;MAAA;IADF,EAJF;EAAA,EADF;AAUD;AAID,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADoB;EAO/BR,YAAY,EAAE;IACZS,KAAK,EAAE,MADK;IAEZC,QAAQ,EAAE,EAFE;IAGZC,gBAAgB,EAAE,EAHN;IAIZC,YAAY,EAAE;EAJF,CAPiB;EAa/BX,UAAU,EAAE;IACVK,eAAe,EAAE,MADP;IAEVO,OAAO,EAAE,EAFC;IAGVC,YAAY,EAAE;EAHJ,CAbmB;EAkB/BZ,WAAW,EAAE;IACXQ,QAAQ,EAAE,EADC;IAEXD,KAAK,EAAE;EAFI;AAlBkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}