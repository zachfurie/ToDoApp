// for i, group := range primary_attribute_list {
	// 	schedule := Schedule{}
	// 	kern := kernel(group, max_dur)
	// 	next_task := weighted_choice(kern)
	// 	schedule.Tasks = append(schedule.Tasks, next_task)
	// 	remaining_groups := make([]string, len(primary_attribute_list))
	// 	copy(remaining_groups, primary_attribute_list)
	// 	remaining_groups[i] = remaining_groups[len(remaining_groups)-1]
	// 	final_schedule := Greedy_recursion(schedule, remaining_groups[:len(remaining_groups)-1], max_dur-next_task.Duration)
	// 	final_schedules = append(final_schedules, final_schedule)
	// }